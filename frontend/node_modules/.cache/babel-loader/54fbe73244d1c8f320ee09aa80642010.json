{"ast":null,"code":"import _classCallCheck from \"/Users/melinagarza/chatbot/django-chatbot/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/melinagarza/chatbot/django-chatbot/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/melinagarza/chatbot/django-chatbot/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/melinagarza/chatbot/django-chatbot/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/melinagarza/chatbot/django-chatbot/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/melinagarza/chatbot/django-chatbot/frontend/src/components/patient/PatientForm.js\";\nimport React, { Component } from 'react';\nimport ChatBot from 'react-simple-chatbot';\nvar ChatSteps = [{\n  id: 'intro',\n  message: 'Hello.',\n  trigger: 'agreement'\n}, {\n  id: 'agreement',\n  message: 'Would you like to submit a patient reqeust?',\n  trigger: 'intro-patient'\n}, {\n  id: 'intro-patient',\n  options: [{\n    value: 'y',\n    label: \"Yes\",\n    trigger: \"enter-name\"\n  }, {\n    value: 'n',\n    label: \"No\",\n    trigger: \"end-chat\"\n  }]\n}, {\n  id: 'end-chat',\n  message: 'No worries, have a great day',\n  end: true\n}, {\n  id: 'request-name',\n  message: 'Please enter your legal name:',\n  trigger: 'patient-name'\n}, {\n  id: 'patient-name',\n  user: true,\n  validator: function validator(value) {\n    if (/^[A-Za-z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*/.test(value)) {\n      return true;\n    } else {\n      return 'Please enter valid name.';\n    }\n  },\n  trigger: 'welcome-name'\n}, {\n  id: 'welcome-name',\n  message: \"Welcome {previousValue}. Let's create your request\",\n  trigger: 'request-email'\n}, {\n  id: 'request-email',\n  message: \"Please enter your email:\",\n  trigger: \"patient-email\"\n}, {\n  id: 'patient-email',\n  user: true,\n  validator: function validator(value) {\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value)) {\n      return true;\n    } else {\n      return 'Please enter a valid email';\n    }\n  },\n  trigger: 'request-dob'\n}, {\n  id: 'request-dob',\n  message: 'Please enter your DOB:',\n  trigger: 'patient-dob'\n}, {\n  id: 'patient-dob',\n  user: true\n}];\nvar PatientForm = /*#__PURE__*/function (_Component) {\n  _inherits(PatientForm, _Component);\n  function PatientForm() {\n    _classCallCheck(this, PatientForm);\n    return _possibleConstructorReturn(this, _getPrototypeOf(PatientForm).apply(this, arguments));\n  }\n  _createClass(PatientForm, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(ChatBot, {\n        steps: ChatSteps,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 14\n        }\n      });\n    }\n  }]);\n  return PatientForm;\n}(Component);\nexport default PatientForm;","map":{"version":3,"names":["React","Component","ChatBot","ChatSteps","id","message","trigger","options","value","label","end","user","validator","test","PatientForm"],"sources":["/Users/melinagarza/chatbot/django-chatbot/frontend/src/components/patient/PatientForm.js"],"sourcesContent":["import React, {Component} from 'react';\nimport ChatBot from 'react-simple-chatbot';\n\nconst ChatSteps = [\n        {\n            id: 'intro',\n            message: 'Hello.',\n            trigger: 'agreement',\n        },{\n             id: 'agreement',\n            message: 'Would you like to submit a patient reqeust?',\n            trigger: 'intro-patient'\n        },{\n            id:'intro-patient',\n            options:[\n                {value:'y',label: \"Yes\",trigger:\"enter-name\"},\n                {value:'n',label: \"No\", trigger:\"end-chat\"},\n            ]\n        },\n        {\n            id:'end-chat',\n            message: 'No worries, have a great day',\n            end: true,\n        },\n        {\n            id: 'request-name',\n            message: 'Please enter your legal name:',\n            trigger: 'patient-name'\n          },{\n    \n            id: 'patient-name',\n            user: true,\n            validator: (value)=> {\n                if(/^[A-Za-z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*/.test(value)){\n                    return true;\n                }\n                else{\n                    return 'Please enter valid name.';\n                }\n            },\n            trigger: 'welcome-name',\n          },\n          {\n            id: 'welcome-name',\n            message: \"Welcome {previousValue}. Let's create your request\",\n            trigger: 'request-email',\n          },{\n                id:'request-email',\n                message: \"Please enter your email:\",\n                trigger:\"patient-email\",\n          },\n          {\n            id: 'patient-email',\n            user:true,\n            validator: (value) => {\n                if(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value)){\n                    return true;\n                }\n                else{\n                    return 'Please enter a valid email';\n                }\n            },\n            trigger:'request-dob',\n          },\n          {\n              id:'request-dob',\n              message:'Please enter your DOB:',\n              trigger:'patient-dob',\n          },\n          {\n              id:'patient-dob',\n              user:true,\n              \n          }\n    \n    ];\nclass PatientForm extends Component{\n    render(){\n        return(\n             <ChatBot steps={ChatSteps} />\n        )\n    }\n}\n\nexport default PatientForm;"],"mappings":";;;;;;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,OAAO,MAAM,sBAAsB;AAE1C,IAAMC,SAAS,GAAG,CACV;EACIC,EAAE,EAAE,OAAO;EACXC,OAAO,EAAE,QAAQ;EACjBC,OAAO,EAAE;AACb,CAAC,EAAC;EACGF,EAAE,EAAE,WAAW;EAChBC,OAAO,EAAE,6CAA6C;EACtDC,OAAO,EAAE;AACb,CAAC,EAAC;EACEF,EAAE,EAAC,eAAe;EAClBG,OAAO,EAAC,CACJ;IAACC,KAAK,EAAC,GAAG;IAACC,KAAK,EAAE,KAAK;IAACH,OAAO,EAAC;EAAY,CAAC,EAC7C;IAACE,KAAK,EAAC,GAAG;IAACC,KAAK,EAAE,IAAI;IAAEH,OAAO,EAAC;EAAU,CAAC;AAEnD,CAAC,EACD;EACIF,EAAE,EAAC,UAAU;EACbC,OAAO,EAAE,8BAA8B;EACvCK,GAAG,EAAE;AACT,CAAC,EACD;EACIN,EAAE,EAAE,cAAc;EAClBC,OAAO,EAAE,+BAA+B;EACxCC,OAAO,EAAE;AACX,CAAC,EAAC;EAEAF,EAAE,EAAE,cAAc;EAClBO,IAAI,EAAE,IAAI;EACVC,SAAS,EAAE,mBAACJ,KAAK,EAAI;IACjB,IAAG,kDAAkD,CAACK,IAAI,CAACL,KAAK,CAAC,EAAC;MAC9D,OAAO,IAAI;IACf,CAAC,MACG;MACA,OAAO,0BAA0B;IACrC;EACJ,CAAC;EACDF,OAAO,EAAE;AACX,CAAC,EACD;EACEF,EAAE,EAAE,cAAc;EAClBC,OAAO,EAAE,oDAAoD;EAC7DC,OAAO,EAAE;AACX,CAAC,EAAC;EACIF,EAAE,EAAC,eAAe;EAClBC,OAAO,EAAE,0BAA0B;EACnCC,OAAO,EAAC;AACd,CAAC,EACD;EACEF,EAAE,EAAE,eAAe;EACnBO,IAAI,EAAC,IAAI;EACTC,SAAS,EAAE,mBAACJ,KAAK,EAAK;IAClB,IAAG,+CAA+C,CAACK,IAAI,CAACL,KAAK,CAAC,EAAC;MAC3D,OAAO,IAAI;IACf,CAAC,MACG;MACA,OAAO,4BAA4B;IACvC;EACJ,CAAC;EACDF,OAAO,EAAC;AACV,CAAC,EACD;EACIF,EAAE,EAAC,aAAa;EAChBC,OAAO,EAAC,wBAAwB;EAChCC,OAAO,EAAC;AACZ,CAAC,EACD;EACIF,EAAE,EAAC,aAAa;EAChBO,IAAI,EAAC;AAET,CAAC,CAEN;AAAC,IACAG,WAAW;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,yBACL;MACJ,oBACK,oBAAC,OAAO;QAAC,KAAK,EAAEX,SAAU;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG;IAEtC;EAAC;EAAA;AAAA,EALqBF,SAAS;AAQnC,eAAea,WAAW"},"metadata":{},"sourceType":"module"}