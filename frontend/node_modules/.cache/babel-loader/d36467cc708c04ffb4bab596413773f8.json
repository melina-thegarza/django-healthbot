{"ast":null,"code":"import _classCallCheck from \"/Users/melinagarza/chatbot/django-chatbot/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/melinagarza/chatbot/django-chatbot/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/melinagarza/chatbot/django-chatbot/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/melinagarza/chatbot/django-chatbot/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/melinagarza/chatbot/django-chatbot/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/melinagarza/chatbot/django-chatbot/frontend/src/components/doctor/UpdateRecord.js\";\nimport { render } from '@testing-library/react';\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { useParams } from \"react-router-dom\";\nvar axiosConfig = {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\nvar UpdateRecord = /*#__PURE__*/function (_Component) {\n  _inherits(UpdateRecord, _Component);\n  function UpdateRecord() {\n    _classCallCheck(this, UpdateRecord);\n    return _possibleConstructorReturn(this, _getPrototypeOf(UpdateRecord).apply(this, arguments));\n  }\n  _createClass(UpdateRecord, [{\n    key: \"render\",\n    /*   constructor(props){\n           super(props);\n           this.state = {\n               record: [],\n                 \n           }\n          \n            }\n    \n       componentDidMount(){\n          \n           //get the record\n           this.retrieveRecord();\n           \n       }\n        retrieveRecord = () => {\n       const id = window.location.href.split('/')[1]\n       axios.get(\"/api/chats/\"+id)\n      .then((res) => this.setState({record: res.data }));\n       \n    };\n    displayRecord = () => {\n       const item = this.state.record;\n        return  (\n        <form>\n       <h5>Record {item.id}</h5>\n    \n        Patient ID: <input type=\"textarea\" id=\"patientid\" name=\"patientid\" value={item.patient_id}  readOnly></input><br></br>\n        Patient Name: <input type=\"text\" id=\"patientname\" name=\"patientname\" value={item.patient_name} readOnly></input><br></br>\n        Email: <input type=\"text\" id=\"email\" name=\"email\" value={item.email} readOnly></input><br></br>\n        DOB: <input type=\"text\" id=\"dob\" name=\"dob\" value={item.dob} readOnly></input><br></br>\n        Symptoms: <input type=\"text\" id=\"symptoms\" name=\"symptoms\" value={item.symptoms} readOnly></input><br></br><br></br>\n        Diagnosis: <input type=\"text\" id=\"diagnosis\" name=\"diagnosis\" placeholder={item.diagnosis} ></input><br></br><br></br>\n       <button>Submit</button>\n            </form>\n        );\n    };\n    */\n    value: function render() {\n      var id = this.props.match.params.id;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"update\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, \"Update Record\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\");\n    }\n  }]);\n  return UpdateRecord;\n}(Component);\n;\nexport default UpdateRecord;","map":{"version":3,"names":["render","axios","React","Component","useParams","axiosConfig","headers","UpdateRecord","id","props","match","params"],"sources":["/Users/melinagarza/chatbot/django-chatbot/frontend/src/components/doctor/UpdateRecord.js"],"sourcesContent":["import { render } from '@testing-library/react';\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport {useParams} from \"react-router-dom\";\n        \nlet axiosConfig = {\n    headers: {\n        'Content-Type': 'application/json',\n        \n    }\n  };\n\n  class UpdateRecord extends Component {\n    \n   \n     /*   constructor(props){\n            super(props);\n            this.state = {\n                record: [],\n\n\n                \n            }\n           \n    \n        }\n    \n\n        componentDidMount(){\n           \n            //get the record\n            this.retrieveRecord();\n            \n        }\n    \n    retrieveRecord = () => {\n        const id = window.location.href.split('/')[1]\n        axios.get(\"/api/chats/\"+id)\n       .then((res) => this.setState({record: res.data }));\n        \n    };\n\n    displayRecord = () => {\n        const item = this.state.record;\n\n        return  (\n\n        <form>\n        <h5>Record {item.id}</h5>\n     \n         Patient ID: <input type=\"textarea\" id=\"patientid\" name=\"patientid\" value={item.patient_id}  readOnly></input><br></br>\n         Patient Name: <input type=\"text\" id=\"patientname\" name=\"patientname\" value={item.patient_name} readOnly></input><br></br>\n         Email: <input type=\"text\" id=\"email\" name=\"email\" value={item.email} readOnly></input><br></br>\n         DOB: <input type=\"text\" id=\"dob\" name=\"dob\" value={item.dob} readOnly></input><br></br>\n         Symptoms: <input type=\"text\" id=\"symptoms\" name=\"symptoms\" value={item.symptoms} readOnly></input><br></br><br></br>\n         Diagnosis: <input type=\"text\" id=\"diagnosis\" name=\"diagnosis\" placeholder={item.diagnosis} ></input><br></br><br></br>\n        <button>Submit</button>\n    \n        </form>\n         );\n    };\n*/\n\n    render(){\n        const { id } = this.props.match.params;\n        return(\n        <div className=\"update\">\n            <h1>Update Record</h1>\n          \n\n        </div>\n    );\n    }\n};\n\nexport default UpdateRecord;"],"mappings":";;;;;;AAAA,SAASA,MAAM,QAAQ,wBAAwB;AAC/C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAAQC,SAAS,QAAO,kBAAkB;AAE1C,IAAIC,WAAW,GAAG;EACdC,OAAO,EAAE;IACL,cAAc,EAAE;EAEpB;AACF,CAAC;AAAC,IAEIC,YAAY;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAGf;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IArCK,yBAgDO;MAAA,IACIC,EAAE,GAAK,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,MAAM,CAA9BH,EAAE;MACV,oBACA;QAAK,SAAS,EAAC,QAAQ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAC,kDACpB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAI,eAAa,CAAK,oCAG1B,CAAM;IAEV;EAAC;EAAA;AAAA,EA5DwBL,SAAS;AA6DrC;AAED,eAAeI,YAAY"},"metadata":{},"sourceType":"module"}