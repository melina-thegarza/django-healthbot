{"ast":null,"code":"import _classCallCheck from \"/Users/melinagarza/chatbot/django-chatbot/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/melinagarza/chatbot/django-chatbot/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/melinagarza/chatbot/django-chatbot/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/melinagarza/chatbot/django-chatbot/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/melinagarza/chatbot/django-chatbot/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/melinagarza/chatbot/django-chatbot/frontend/src/components/patient/PatientForm.js\";\nimport React, { Component } from 'react';\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport PostRequest from './PostRequest';\nvar style = {\n  background: '#e9f7f1',\n  fontFamily: 'Georgia',\n  botBubbleColor: '#000000',\n  botFontColor: '#fff',\n  userBubbleColor: '#e3bc52'\n};\nvar ChatSteps = [{\n  id: 'intro',\n  message: 'Hello.',\n  trigger: 'intro2'\n}, {\n  id: 'intro2',\n  message: 'How can I help you?',\n  trigger: 'patientchoice'\n}, {\n  id: 'patientchoice',\n  options: [{\n    value: 'request',\n    label: \"Submit Patient Request\",\n    trigger: \"request-name\"\n  }, {\n    value: 'info',\n    label: \"Health Information\",\n    trigger: \"healthguide\"\n  }]\n}, {\n  id: 'healthguide',\n  message: 'What do you want to learn about?',\n  trigger: \"healthtopics\"\n}, {\n  id: 'healthtopics',\n  message: 'What do you want to learn about?',\n  trigger: \"healthtopics\"\n}, {\n  id: 'request-name',\n  message: 'Please enter your legal name:',\n  trigger: 'patientname'\n}, {\n  id: 'patientname',\n  user: true,\n  validator: function validator(value) {\n    if (/^[A-Za-z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*/.test(value)) {\n      return true;\n    } else {\n      return 'Please enter valid name.';\n    }\n  },\n  trigger: 'welcome-name'\n}, {\n  id: 'welcome-name',\n  message: \"Welcome {previousValue}. Let's create your request\",\n  trigger: 'request-email'\n}, {\n  id: 'request-email',\n  message: \"Please enter your email:\",\n  trigger: \"patientemail\"\n}, {\n  id: 'patientemail',\n  user: true,\n  validator: function validator(value) {\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value)) {\n      return true;\n    } else {\n      return 'Please enter a valid email';\n    }\n  },\n  trigger: 'request-phone'\n}, {\n  id: 'request-phone',\n  message: 'Please enter your phone number:(###-###-#####)',\n  trigger: 'patientphone'\n}, {\n  id: 'patientphone',\n  user: true,\n  validator: function validator(value) {\n    if (/^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]\\d{3}[\\s.-]\\d{4}$/.test(value)) {\n      return true;\n    } else {\n      return 'Please enter valid phone number (###-###-#####)';\n    }\n  },\n  trigger: 'request-symptoms'\n}, {\n  id: 'request-symptoms',\n  message: 'What are your symptoms?',\n  trigger: 'symptoms'\n}, {\n  id: 'symptoms',\n  options: [{\n    value: 'cough',\n    label: 'Cough',\n    trigger: 'send-request'\n  }, {\n    value: 'fever',\n    label: 'Fever',\n    trigger: 'send-request'\n  }, {\n    value: 'headache',\n    label: 'Headache',\n    trigger: 'send-request'\n  }]\n}, {\n  id: 'send-request',\n  component: /*#__PURE__*/React.createElement(PostRequest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 26\n    }\n  }),\n  asMessage: true,\n  end: true\n}];\nvar PatientForm = /*#__PURE__*/function (_Component) {\n  _inherits(PatientForm, _Component);\n  function PatientForm() {\n    _classCallCheck(this, PatientForm);\n    return _possibleConstructorReturn(this, _getPrototypeOf(PatientForm).apply(this, arguments));\n  }\n  _createClass(PatientForm, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(ThemeProvider, {\n        theme: style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }\n      }, \"\\xA0\", /*#__PURE__*/React.createElement(ChatBot, {\n        steps: ChatSteps,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 14\n        }\n      }));\n    }\n  }]);\n  return PatientForm;\n}(Component);\nexport default PatientForm;","map":{"version":3,"names":["React","Component","ChatBot","ThemeProvider","PostRequest","style","background","fontFamily","botBubbleColor","botFontColor","userBubbleColor","ChatSteps","id","message","trigger","options","value","label","user","validator","test","component","asMessage","end","PatientForm"],"sources":["/Users/melinagarza/chatbot/django-chatbot/frontend/src/components/patient/PatientForm.js"],"sourcesContent":["import React, {Component} from 'react';\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport PostRequest from './PostRequest';\n\nconst style = {\n    background :'#e9f7f1',\n    fontFamily: 'Georgia',\n    botBubbleColor: '#000000',\n    botFontColor: '#fff',\n    userBubbleColor: '#e3bc52',\n    \n\n};\nconst ChatSteps = [\n        {\n            id: 'intro',\n            message: 'Hello.',\n            trigger: 'intro2',\n        },\n         {\n                id: 'intro2',\n                message: 'How can I help you?',\n                trigger: 'patientchoice',\n            },\n         {\n                    id: 'patientchoice',\n                    options:[\n                {value:'request',label: \"Submit Patient Request\",trigger:\"request-name\"},\n                {value:'info',label: \"Health Information\", trigger:\"healthguide\"},\n                ]\n        },\n    \n        {\n            id:'healthguide',\n            message: 'What do you want to learn about?',\n            trigger:\"healthtopics\",\n        },\n        {\n            id:'healthtopics',\n            message: 'What do you want to learn about?',\n            trigger:\"healthtopics\",\n        },\n        \n        {\n            id: 'request-name',\n            message: 'Please enter your legal name:',\n            trigger: 'patientname'\n          },{\n    \n            id: 'patientname',\n            user: true,\n            validator: (value)=> {\n                if(/^[A-Za-z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*/.test(value)){\n                    return true;\n                }\n                else{\n                    return 'Please enter valid name.';\n                }\n            },\n            trigger: 'welcome-name',\n          },\n          {\n            id: 'welcome-name',\n            message: \"Welcome {previousValue}. Let's create your request\",\n            trigger: 'request-email',\n          },{\n                id:'request-email',\n                message: \"Please enter your email:\",\n                trigger:\"patientemail\",\n          },\n          {\n            id: 'patientemail',\n            user:true,\n            validator: (value) => {\n                if(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value)){\n                    return true;\n                }\n                else{\n                    return 'Please enter a valid email';\n                }\n            },\n            trigger:'request-phone',\n          },\n          {\n              id:'request-phone',\n              message:'Please enter your phone number:(###-###-#####)',\n              trigger:'patientphone',\n          },\n          {\n              id:'patientphone',\n              user:true,\n              validator: (value) => {\n                  if(/^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]\\d{3}[\\s.-]\\d{4}$/.test(value)){\n                      return true;\n                  }\n                  else{\n                      return 'Please enter valid phone number (###-###-#####)'\n                  }\n              },\n              trigger:'request-symptoms',\n\n          },\n          {\n            id:'request-symptoms',\n            message:'What are your symptoms?',\n            trigger:'symptoms',\n          },\n          {\n              id:'symptoms',\n            options:[\n                {value:'cough',label:'Cough',trigger:'send-request'},\n                {value:'fever',label:'Fever',trigger:'send-request'},\n                {value:'headache',label:'Headache',trigger:'send-request'},\n\n            ]\n          },\n          {\n              id:'send-request',\n              component: <PostRequest />,\n              asMessage:true,\n              end: true\n          }\n\n    \n    ];\nclass PatientForm extends Component{\n    render(){\n        return(\n            <ThemeProvider theme={style}>\n             <ChatBot steps={ChatSteps} />\n            </ThemeProvider>\n        )  \n    }\n}\n\nexport default PatientForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}