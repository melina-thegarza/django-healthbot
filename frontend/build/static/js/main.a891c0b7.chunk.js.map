{"version":3,"sources":["components/doctor/UpdateLink.js","components/doctor/RecordView.js","components/doctor/Button.js","components/patient/PostRequest.js","components/patient/HealthLink.js","components/patient/PatientForm.js","components/patient/Home.js","components/doctor/UpdateRecord.js","App.js","index.js"],"names":["UpdateLink","_ref","to","react_default","a","createElement","react_router_dom_dist","className","RecordView","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","refreshRecords","axios","get","then","res","setState","recordsList","data","handleDelete","id","delete","renderRecords","state","map","item","key","patient_id","patient_name","email","phone_num","symptoms","diagnosis","doctor_UpdateLink","type","alt","src","onClick","inherits","createClass","value","filter","tr","td","i","document","getElementById","toUpperCase","getElementsByTagName","length","textContent","innerText","indexOf","style","display","Component","Button","concat","axiosConfig","headers","Content-Type","Vary","PostRequest","createReceipt","setTimeout","console","log","record","createReceiptBody","steps","patientname","patientemail","patientphone","_this2","patientRequest","post","flushSync","HealthLink","apply","arguments","link","step","metadata","label","href","background","fontFamily","botBubbleColor","botFontColor","userBubbleColor","ChatSteps","message","trigger","options","asMessage","component","patient_HealthLink","end","user","validator","test","patient_PostRequest","PatientForm","styled_components_browser_esm","theme","react_simple_chatbot_default","Home","patient_PatientForm","UpdateRecord","retrieveRecord","updateRecord","event","preventDefault","target","put","updatestautus","status","isSubmitted","isSuccessful","displayRecord","onSubmit","name","readOnly","defaultValue","window","location","pathname","split","bind","assertThisInitialized","App","doctor_Button","dist","path","element","patient_Home","doctor_RecordView","doctor_UpdateRecord","ReactDOM","createRoot","render","src_App"],"mappings":"yPAiBeA,EAfI,SAAHC,GAAa,IAARC,EAAED,EAAFC,GAGjB,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAI,CAACJ,GAAI,WAAWA,GAChBC,EAAAC,EAAAC,cAAA,UAAQE,UAAU,eAAc,UCoG9BC,EArGC,SAAAC,GAEZ,SAAAD,EAAYE,GAAM,IAAAC,EAIb,OAJaC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACdG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KAcdQ,eAAiB,WACbC,IAAMC,IAAI,eACTC,KAAK,SAACC,GAAG,OAAKX,EAAKY,SAAS,CAACC,YAAaF,EAAIG,UAElDd,EAEDe,aAAe,SAACC,GACZR,IAAMS,OAAO,cAAcD,EAAG,KAC7BN,KAAK,SAACC,GAAG,OAAKX,EAAKO,oBACvBP,EAEDkB,cAAgB,WAKZ,OAHclB,EAAKmB,MAAMN,YAGZO,IAAI,SAACC,GAAI,OAClB7B,EAAAC,EAAAC,cAAA,MAAI4B,IAAOD,EAAKL,IAChBxB,EAAAC,EAAAC,cAAA,UAAK2B,EAAKL,IACVxB,EAAAC,EAAAC,cAAA,UAAK2B,EAAKE,YACV/B,EAAAC,EAAAC,cAAA,UAAK2B,EAAKG,cACVhC,EAAAC,EAAAC,cAAA,UAAK2B,EAAKI,OACVjC,EAAAC,EAAAC,cAAA,UAAK2B,EAAKK,WACVlC,EAAAC,EAAAC,cAAA,UAAK2B,EAAKM,UACVnC,EAAAC,EAAAC,cAAA,UAAK2B,EAAKO,WACVpC,EAAAC,EAAAC,cAAA,UAAI,IAACF,EAAAC,EAAAC,cAACmC,EAAU,CAACtC,GAAK8B,EAAKL,MAC3BxB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAOoC,KAAK,QAAQC,IAAI,SAASf,GAAG,SAASgB,IAAI,sDAAsDC,QAAS,kBAAMjC,EAAKe,aAAaM,EAAKL,YAvCjJhB,EAAKmB,MAAQ,CACTN,YAAa,IAChBb,EA6FJ,OAnGWC,OAAAiC,EAAA,EAAAjC,CAAAJ,EAAAC,GAOXG,OAAAkC,EAAA,EAAAlC,CAAAJ,EAAA,EAAAyB,IAAA,oBAAAc,MAAA,WAMDjC,KAAKI,mBAER,CAAAe,IAAA,WAAAc,MAAA,WAoCG,IAAWC,EAAeC,EAAIC,EAAIC,EAKlC,IAHAH,EADQI,SAASC,eAAe,YACjBN,MAAMO,cAErBL,EADQG,SAASC,eAAe,kBACrBE,qBAAqB,MAC3BJ,EAAI,EAAGA,EAAIF,EAAGO,OAAQL,KACzBD,EAAKD,EAAGE,GAAGI,qBAAqB,MAAM,OAEzBL,EAAGO,aAAeP,EAAGQ,WACnBJ,cAAcK,QAAQX,IAAW,EAC5CC,EAAGE,GAAGS,MAAMC,QAAU,GAEtBZ,EAAGE,GAAGS,MAAMC,QAAU,UAI7B,CAAA5B,IAAA,SAAAc,MAAA,WAGC,OAGI5C,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,UAAI,mBAAoBF,EAAAC,EAAAC,cAAA,WAExBF,EAAAC,EAAAC,cAAA,SAAOsB,GAAG,kBACVxB,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAI,aACJF,EAAAC,EAAAC,cAAA,UAAI,cACJF,EAAAC,EAAAC,cAAA,UAAI,gBACJF,EAAAC,EAAAC,cAAA,UAAI,SACJF,EAAAC,EAAAC,cAAA,UAAI,WACJF,EAAAC,EAAAC,cAAA,UAAI,YACJF,EAAAC,EAAAC,cAAA,UAAI,aACJF,EAAAC,EAAAC,cAAA,UAAI,eACJF,EAAAC,EAAAC,cAAA,UAAI,WAGPS,KAAKe,uBAQbrB,EAnGW,CAASsD,aCWVC,EAfA,SAAH9D,GAAa,IAARC,EAAED,EAAFC,GAGb,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAI,CAACJ,GAAE,IAAA8D,OAAM9D,IACTC,EAAAC,EAAAC,cAAA,UAAQE,UAAU,iBACV,KAAPL,EAAY,iBAAmB,sDCHzC+D,EAAc,CACdC,QAAS,CACLC,eAAgB,mBAChBC,KAAQ,WA2EDC,EAvEE,SAAA5D,GACb,SAAA4D,EAAY3D,GAAM,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuD,IACd1D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyD,GAAApD,KAAAH,KAAMJ,KA+Bd4D,cAAc,WACVC,WAAW,WACPC,QAAQC,IAAI9D,EAAKmB,MAAM4C,SACtB,IAER/D,EAEDgE,kBAAoB,WAChB,IAAM3C,EAAOrB,EAAKmB,MAAM4C,OAKzB,OAFCF,QAAQC,IAAK9D,EAAKmB,MAAM4C,QAGZvE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACfJ,EAAAC,EAAAC,cAAA,UAAI,cAAY2B,EAAKL,IACrBxB,EAAAC,EAAAC,cAAA,UAAI,eAAa2B,EAAKE,YACtB/B,EAAAC,EAAAC,cAAA,UAAI,SAAO2B,EAAKG,cAChBhC,EAAAC,EAAAC,cAAA,UAAI,UAAQ2B,EAAKI,OACjBjC,EAAAC,EAAAC,cAAA,UAAI,iBAAe2B,EAAKK,WACxBlC,EAAAC,EAAAC,cAAA,UAAI,aAAW2B,EAAKM,UACpBnC,EAAAC,EAAAC,cAAA,UAAI,oBAInB,IAvDcuE,EAASjE,EAAKD,MAAdkE,MACCC,EAAoDD,EAApDC,YAAaC,EAAuCF,EAAvCE,aAAaC,EAA0BH,EAA1BG,aAAczC,EAAYsC,EAAZtC,SAO1C,OANN3B,EAAKmB,MAAQ,CACT+C,cACCC,eACDC,eACCzC,WACAoC,OAAQ,IACP/D,EA0DT,OArEYC,OAAAiC,EAAA,EAAAjC,CAAAyD,EAAA5D,GAaZG,OAAAkC,EAAA,EAAAlC,CAAAyD,EAAA,EAAApC,IAAA,oBAAAc,MAAA,WAGc,IAAAiC,EAAAlE,KACTmE,EAAiB,CACnB9C,aAAcrB,KAAKgB,MAAM+C,YAAY9B,MACrCX,MAAOtB,KAAKgB,MAAMgD,aAAa/B,MAC/BV,UAAWvB,KAAKgB,MAAMiD,aAAahC,MACnCT,SAAUxB,KAAKgB,MAAMQ,SAASS,OAIlC5B,IAAM+D,KAAK,cAAcD,EAAehB,GACvC5C,KAAK,SAACC,GAAG,OAAK6D,oBAAU,WACrBH,EAAKzD,SAAS,CAACmD,OAAQpD,EAAIG,MAAOuD,EAAKV,uBAK9C,CAAArC,IAAA,SAAAc,MAAA,WA6BG,OACI5C,EAAAC,EAAAC,cAAA,WAAK,4DACIS,KAAK6D,yBAMjBN,EArEY,CAASP,aCGXsB,EAbC,SAAA3E,GAAA,SAAA2E,IAAA,OAAAxE,OAAAC,EAAA,EAAAD,CAAAE,KAAAsE,GAAAxE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwE,GAAAC,MAAAvE,KAAAwE,YAUX,OAVW1E,OAAAiC,EAAA,EAAAjC,CAAAwE,EAAA3E,GAAAG,OAAAkC,EAAA,EAAAlC,CAAAwE,EAAA,EAAAnD,IAAA,SAAAc,MAAA,WAGR,IAAMwC,EAAOzE,KAAKJ,MAAM8E,KAAKC,SAASF,MAAQ,GACxCG,EAAQ5E,KAAKJ,MAAM8E,KAAKC,SAASC,OAAS,GAChD,OACIvF,EAAAC,EAAAC,cAAA,KAAGsF,KAAMJ,GACJG,OAGZN,EAVW,CAAStB,aCInBF,EAAQ,CACVgC,WAAY,UACZC,WAAY,UACZC,eAAgB,UAChBC,aAAc,OACdC,gBAAiB,WAIfC,EAAY,CACV,CACItE,GAAI,QACJuE,QAAS,SACTC,QAAS,UAEZ,CACOxE,GAAI,SACJuE,QAAS,sBACTC,QAAS,iBAEhB,CACWxE,GAAI,gBACJyE,QAAQ,CACZ,CAACrD,MAAM,UAAU2C,MAAO,yBAAyBS,QAAQ,gBACzD,CAACpD,MAAM,OAAO2C,MAAO,qBAAsBS,QAAQ,iBAK3D,CACIxE,GAAG,cACHuE,QAAS,mCACTC,QAAQ,gBAEZ,CACIxE,GAAG,eACDyE,QAAQ,CACN,CAACrD,MAAM,QAAQ2C,MAAO,WAAWS,QAAQ,SACzC,CAACpD,MAAM,QAAQ2C,MAAO,eAAgBS,QAAQ,WAKtD,CACIxE,GAAI,QACJuE,QAAS,kBACTC,QAAQ,gBAEV,CACExE,GAAI,eACJyE,QAAQ,CACJ,CAACrD,MAAM,gBAAgB2C,MAAO,WAAWS,QAAQ,qBACjD,CAACpD,MAAM,iBAAiB2C,MAAO,YAAaS,QAAQ,oBAG1D,CACExE,GAAI,oBACJ0E,WAAU,EACVC,UAAWnG,EAAAC,EAAAC,cAACkG,EAAU,MACtBd,SAAS,CACLF,KAAK,2EACLG,MAAO,6BAGXS,QAAQ,iBAGV,CACExE,GAAI,gBACJuE,QAAQ,kEACRM,KAAI,GAKP,CACC7E,GAAI,iBACJ0E,WAAU,EACVC,UAAWnG,EAAAC,EAAAC,cAACkG,EAAU,MACtBd,SAAS,CACLF,KAAK,2FACLG,MAAO,8BAGXS,QAAQ,cAGV,CACExE,GAAI,aACJuE,QAAQ,8DACRM,KAAI,GAGJ,CACE7E,GAAI,QACJuE,QAAS,kBACTC,QAAQ,gBAEZ,CACExE,GAAI,eACJyE,QAAQ,CACJ,CAACrD,MAAM,gBAAgB2C,MAAO,WAAWS,QAAQ,qBACjD,CAACpD,MAAM,iBAAiB2C,MAAO,YAAaS,QAAQ,oBAG1D,CACExE,GAAI,oBACJ0E,WAAU,EACVC,UAAWnG,EAAAC,EAAAC,cAACkG,EAAU,MACtBd,SAAS,CACLF,KAAK,oEACLG,MAAO,iCAGXS,QAAQ,iBAGV,CACExE,GAAI,gBACJuE,QAAQ,uGACRM,KAAI,GAKP,CACC7E,GAAI,iBACJ0E,WAAU,EACVC,UAAWnG,EAAAC,EAAAC,cAACkG,EAAU,MACtBd,SAAS,CACLF,KAAK,yEACLG,MAAO,kCAGXS,QAAQ,cAGV,CACExE,GAAI,aACJuE,QAAQ,wFACRM,KAAI,GAKJ,CACI7E,GAAI,eACJuE,QAAS,gCACTC,QAAS,eACT,CAEAxE,GAAI,cACJ8E,MAAM,EACNC,UAAW,SAAC3D,GACR,QAAG,8CAA8C4D,KAAK5D,IAI3C,4BAGfoD,QAAS,gBAEX,CACExE,GAAI,eACJuE,QAAS,qDACTC,QAAS,iBACT,CACIxE,GAAG,gBACHuE,QAAS,2BACTC,QAAQ,gBAEd,CACExE,GAAI,eACJ8E,MAAK,EACLC,UAAW,SAAC3D,GACR,QAAG,gDAAgD4D,KAAK5D,IAI7C,8BAGfoD,QAAQ,iBAEV,CACIxE,GAAG,gBACHuE,QAAQ,iDACRC,QAAQ,gBAEZ,CACIxE,GAAG,eACH8E,MAAK,EACLC,UAAW,SAAC3D,GACR,QAAG,oDAAoD4D,KAAK5D,IAIjD,mDAGfoD,QAAQ,oBAGZ,CACExE,GAAG,mBACHuE,QAAQ,0BACRC,QAAQ,YAEV,CACIxE,GAAG,WACLyE,QAAQ,CACJ,CAACrD,MAAM,QAAQ2C,MAAM,QAAQS,QAAQ,gBACrC,CAACpD,MAAM,QAAQ2C,MAAM,QAAQS,QAAQ,gBACrC,CAACpD,MAAM,WAAW2C,MAAM,WAAWS,QAAQ,kBAKjD,CACIxE,GAAG,eACH2E,UAAWnG,EAAAC,EAAAC,cAACuG,EAAW,MACvBP,WAAU,EACVG,KAAK,IAeJK,EAVE,SAAApG,GAAA,SAAAoG,IAAA,OAAAjG,OAAAC,EAAA,EAAAD,CAAAE,KAAA+F,GAAAjG,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiG,GAAAxB,MAAAvE,KAAAwE,YAOZ,OAPY1E,OAAAiC,EAAA,EAAAjC,CAAAiG,EAAApG,GAAAG,OAAAkC,EAAA,EAAAlC,CAAAiG,EAAA,EAAA5E,IAAA,SAAAc,MAAA,WAET,OACI5C,EAAAC,EAAAC,cAACyG,EAAA,cAAa,CAACC,MAAOnD,GAAO,OAC5BzD,EAAAC,EAAAC,cAAC2G,EAAA5G,EAAO,CAACwE,MAAOqB,SAGxBY,EAPY,CAAS/C,aC7NXmD,EAVF,WACT,OACJ9G,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAO,mDACVJ,EAAAC,EAAAC,cAAA,UAAI,wBAELF,EAAAC,EAAAC,cAAC6G,EAAW,MAAG,6CCqGXC,EAvGK,SAAA1G,GAGZ,SAAA0G,EAAYzG,GAAM,IAAAC,EASmC,OATnCC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqG,IACdxG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuG,GAAAlG,KAAAH,KAAMJ,KAsBd0G,eAAiB,WAEbjG,IAAMC,IAAI,cAAcT,EAAKmB,MAAMH,IACnCN,KAAK,SAACC,GAAG,OAAKX,EAAKY,SAAS,CAACmD,OAAQpD,EAAIG,UAE5Cd,EAED0G,aAAe,SAACC,GACZA,EAAMC,iBAEN5G,EAAKmB,MAAM4C,OAAOnC,UAAa+E,EAAME,OAAO,GAAGzE,MAChD5B,IAAMsG,IAAI,cAAc9G,EAAKmB,MAAMH,GAAG,IAAIhB,EAAKmB,MAAM4C,QACnDrD,KAAK,SAACC,GAAG,OAAK6D,oBAAU,WACrBxE,EAAKY,SAAS,CAACmG,cAAepG,EAAIqG,OAAQC,aAAY,GAAOjH,EAAKkH,qBAKzElH,EAEDkH,aAAe,WAEXtD,WAAW,WACPC,QAAQC,IAAI9D,EAAKmB,MAAM4F,gBACtB,GAGyB,QAA3B/G,EAAKmB,MAAM4F,eACVvC,oBAAW,WACPxE,EAAKY,SAAS,CAACqG,aAAa,OAGvCjH,EAGDmH,cAAgB,WACZ,IAAM9F,EAAOrB,EAAKmB,MAAM4C,OAExB,OAEAvE,EAAAC,EAAAC,cAAA,QAAM0H,SAAUpH,EAAK0G,cAErBlH,EAAAC,EAAAC,cAAA,UAAI,UAAQ2B,EAAKL,IAAQ,eAEZxB,EAAAC,EAAAC,cAAA,SAAOoC,KAAK,WAAWd,GAAG,YAAYqG,KAAK,YAAYjF,MAAOf,EAAKE,WAAa+F,UAAQ,IAAS9H,EAAAC,EAAAC,cAAA,WAAS,iBACxGF,EAAAC,EAAAC,cAAA,SAAOoC,KAAK,OAAOd,GAAG,cAAcqG,KAAK,cAAcjF,MAAOf,EAAKG,aAAc8F,UAAQ,IAAS9H,EAAAC,EAAAC,cAAA,WAAS,UAClHF,EAAAC,EAAAC,cAAA,SAAOoC,KAAK,OAAOd,GAAG,QAAQqG,KAAK,QAAQjF,MAAOf,EAAKI,MAAO6F,UAAQ,IAAS9H,EAAAC,EAAAC,cAAA,WAAS,YACtFF,EAAAC,EAAAC,cAAA,SAAOoC,KAAK,OAAOd,GAAG,QAAQqG,KAAK,QAAQjF,MAAOf,EAAKK,UAAW4F,UAAQ,IAAS9H,EAAAC,EAAAC,cAAA,WAAS,aAC3FF,EAAAC,EAAAC,cAAA,SAAOoC,KAAK,OAAOd,GAAG,WAAWqG,KAAK,WAAWjF,MAAOf,EAAKM,SAAU2F,UAAQ,IAAS9H,EAAAC,EAAAC,cAAA,WAASF,EAAAC,EAAAC,cAAA,WAAS,cACzGF,EAAAC,EAAAC,cAAA,SAAOoC,KAAK,OAAOd,GAAG,YAAYqG,KAAK,YAAYE,aAAclG,EAAKO,YAAoB,KAAEpC,EAAAC,EAAAC,cAAA,WAASF,EAAAC,EAAAC,cAAA,WACjHF,EAAAC,EAAAC,cAAA,UAAQoC,KAAK,UAAS,YAvElB9B,EAAKmB,MAAQ,CACT4C,OAAQ,GACR/C,GAAIwG,OAAOC,SAASC,SAASC,MAAM,KAAK,GACxCZ,cAAe,GACfE,aAAc,GAGlBjH,EAAK0G,aAAe1G,EAAK0G,aAAakB,KAAK3H,OAAA4H,EAAA,EAAA5H,QAAA4H,EAAA,EAAA5H,CAAAD,KAAMA,EAwFxD,OApGeC,OAAAiC,EAAA,EAAAjC,CAAAuG,EAAA1G,GAeXG,OAAAkC,EAAA,EAAAlC,CAAAuG,EAAA,EAAAlF,IAAA,oBAAAc,MAAA,WAOGjC,KAAKsG,mBAER,CAAAnF,IAAA,SAAAc,MAAA,WAgED,OACA5C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAAS,mDACpBJ,EAAAC,EAAAC,cAAA,UAAI,iBACHS,KAAKgH,gBAAgB3H,EAAAC,EAAAC,cAAA,YACM,IAA3BS,KAAKgB,MAAM8F,aAChBzH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAAiB,2BAGjC,wCAIF4G,EApGe,CAASrD,aCuCd2E,EAtCH,WAER,OAEItI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAEfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACfJ,EAAAC,EAAAC,cAAA,WACMF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACqI,EAAM,CAACxI,GAAI,MAChBC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACqI,EAAM,CAACxI,GAAI,gBAMpBC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACfJ,EAAAC,EAAAC,cAACsI,EAAA,EAAM,KACLxI,EAAAC,EAAAC,cAACsI,EAAA,EAAK,CAACC,KAAM,IAAIC,QAAS1I,EAAAC,EAAAC,cAACyI,EAAI,QAC/B3I,EAAAC,EAAAC,cAACsI,EAAA,EAAK,CAACC,KAAO,WAAWC,QAAS1I,EAAAC,EAAAC,cAAC0I,EAAU,QAC7C5I,EAAAC,EAAAC,cAACsI,EAAA,EAAK,CAACC,KAAO,cAAcC,QAAS1I,EAAAC,EAAAC,cAAC2I,EAAY,QAClD7I,EAAAC,EAAAC,cAACsI,EAAA,EAAK,CAACC,KAAK,IAAIC,QAAS1I,EAAAC,EAAAC,cAAA,SAAG,yBAExB,iDCLL4I,IAASC,WAAW9F,SAASC,eAAe,SAIpD8F,OACHhJ,EAAAC,EAAAC,cAACC,EAAA,EAAa,KACZH,EAAAC,EAAAC,cAAC+I,EAAG","file":"static/js/main.a891c0b7.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nconst UpdateLink = ({to}) => {\n\n\n    return (\n        <Link to={'/update/'+to}>\n             <button className=\"update-link\">\n             Edit\n            </button>\n\n        </Link>\n           \n        \n    )\n}\n\nexport default UpdateLink;","import axios from 'axios';\nimport React, { Component } from 'react';\nimport UpdateLink from \"./UpdateLink\"\n\n\n\nclass RecordView extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            recordsList: []\n        }\n    }\n    \n\ncomponentDidMount(){\n   \n    //send the HTTP GET request\n    this.refreshRecords();\n    \n}\n\nrefreshRecords = () => {\n    axios.get(\"/api/chats/\")\n    .then((res) => this.setState({recordsList: res.data }));\n    \n};\n\nhandleDelete = (id) => {\n    axios.delete('/api/chats/'+id+'/')\n    .then((res) => this.refreshRecords());\n}\n\nrenderRecords = () => {\n\n    const items = this.state.recordsList;\n  \n\n    return items.map((item) => (\n        <tr key = {item.id}>\n        <td>{item.id}</td>\n        <td>{item.patient_id}</td>\n        <td>{item.patient_name}</td>\n        <td>{item.email}</td>\n        <td>{item.phone_num}</td>\n        <td>{item.symptoms}</td>\n        <td>{item.diagnosis}</td>\n        <td> <UpdateLink to ={item.id} /></td>\n        <td><input type=\"image\" alt=\"delete\" id=\"delete\" src=\"https://img.icons8.com/color/512/delete-forever.png\" onClick={() => this.handleDelete(item.id)} /></td>\n        </tr>\n\n        \n    ));\n};\n\n mySearch() {\n    var input, filter, table, tr, td, i, txtValue;\n    input = document.getElementById(\"mySearch\");\n    filter = input.value.toUpperCase();\n    table = document.getElementById(\"patientrecords\");\n    tr = table.getElementsByTagName(\"tr\");\n    for (i = 0; i < tr.length; i++) {\n      td = tr[i].getElementsByTagName(\"td\")[0];\n      if (td) {\n        txtValue = td.textContent || td.innerText;\n        if (txtValue.toUpperCase().indexOf(filter) > -1) {\n          tr[i].style.display = \"\";\n        } else {\n          tr[i].style.display = \"none\";\n        }\n      }       \n    }\n  }\n\nrender(){\n    return(\n        \n        \n        <div>\n        \n        <h1>Patient Records</h1><br></br>\n\n        <table id=\"patientrecords\">\n        <tbody>\n            <tr>\n                <th>Record ID</th>\n                <th>Patient ID</th>\n                <th>Patient Name</th>\n                <th>Email</th>\n                <th>Phone #</th>\n                <th>Symptoms</th>\n                <th>Diagnosis</th>\n                <th>Update/Edit</th>\n                <th>Delete</th>\n\n            </tr>\n            {this.renderRecords()}\n        </tbody>\n        </table>\n        </div>\n       \n        \n        \n    )\n    }\n};\nexport default RecordView;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nconst Button = ({to}) => {\n\n\n    return (\n        <Link to={`/${to}`}>\n             <button className=\"custom-button\">\n             {to === '' ? \"Patient Portal\" : \"Patient Records\"}\n            </button>\n\n        </Link>\n           \n        \n    )\n}\n\nexport default Button;","import axios from 'axios';\nimport React, { Component } from 'react';\nimport { flushSync } from 'react-dom';\n\n\nlet axiosConfig = {\n    headers: {\n        'Content-Type': 'application/json',\n        \"Vary\": \"Accept\",\n    }\n  };\n//get user input from the chatbot interaction\nclass PostRequest extends Component{\n    constructor(props){\n        super(props);\n        const {steps} = this.props;\n        const { patientname, patientemail,patientphone, symptoms} = steps;\n        this.state = { \n            patientname,\n             patientemail,\n            patientphone,\n             symptoms, \n             record: []\n            };\n\n    }\n\n\ncomponentDidMount(){\n    const patientRequest = {\n        patient_name: this.state.patientname.value,\n        email: this.state.patientemail.value,\n        phone_num: this.state.patientphone.value,\n        symptoms: this.state.symptoms.value\n\n    };\n    //send the HTTP POST, update the database\n    axios.post('/api/chats/',patientRequest,axiosConfig)\n    .then((res) => flushSync(() =>{\n        this.setState({record: res.data}, this.createReceipt());\n    }));\n   \n\n\n}\ncreateReceipt=()=>{\n    setTimeout(() => {\n        console.log(this.state.record);\n      }, 0);\n   \n}\n\ncreateReceiptBody = () =>{\n    const item = this.state.record;\n    \n    //const obj = JSON.parse(this.state.record);\n    console.log( this.state.record)\n    \n   return (\n                <div className=\"receipt\">\n                <li>Record ID: {item.id}</li>\n                <li>Patient ID: {item.patient_id}</li>\n                <li>Name: {item.patient_name}</li>\n                <li>Email: {item.email}</li>\n                <li>Phone Number: {item.phone_num}</li> \n                <li>Symptoms: {item.symptoms}</li>\n                <li>Diagnosis: N/A</li>\n                </div>\n                \n    );\n};\n\nrender(){\n    return(\n        <div>Thank you for submitting a request. Below is your receipt\n                {this.createReceiptBody()}\n                  \n\n        </div>\n  \n    )\n    }\n};\nexport default PostRequest;","import React, {Component} from 'react';\n\nclass HealthLink extends Component {\n    \n    render() {\n        const link = this.props.step.metadata.link || '';\n        const label = this.props.step.metadata.label || '';\n        return (\n            <a href={link}>\n                {label}\n            </a>\n        );\n    }\n}\n\nexport default HealthLink;","import React, {Component} from 'react';\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport PostRequest from './PostRequest';\nimport HealthLink from './HealthLink';\n\nconst style = {\n    background :'#e9f7f1',\n    fontFamily: 'Georgia',\n    botBubbleColor: '#000000',\n    botFontColor: '#fff',\n    userBubbleColor: '#e3bc52',\n    \n\n};\nconst ChatSteps = [\n        {\n            id: 'intro',\n            message: 'Hello.',\n            trigger: 'intro2',\n        },\n         {\n                id: 'intro2',\n                message: 'How can I help you?',\n                trigger: 'patientchoice',\n            },\n         {\n                    id: 'patientchoice',\n                    options:[\n                {value:'request',label: \"Submit Patient Request\",trigger:\"request-name\"},\n                {value:'info',label: \"Health Information\", trigger:\"healthguide\"},\n                ]\n        },\n\n    //for health information\n        {\n            id:'healthguide',\n            message: 'What do you want to learn about?',\n            trigger:\"healthtopics\",\n        },\n        {\n            id:'healthtopics',\n              options:[\n                {value:'covid',label: \"COVID-19\",trigger:\"covid\"},\n                {value:'strep',label: \"Strep Throat\", trigger:\"strep\"},\n                ],\n            \n        },\n\n        {\n            id: 'covid',\n            message: 'Choose a topic:',\n            trigger:'coviddetails',\n          },\n          {\n            id: 'coviddetails',\n            options:[\n                {value:'covidsymptoms',label: \"Symptoms\",trigger:\"covidsymptomslink\"},\n                {value:'covidtreatment',label: \"Treatment\", trigger:\"covidcureslink\"},\n                ],\n          },\n          {\n            id: 'covidsymptomslink',\n            asMessage:true,\n            component: <HealthLink />,\n            metadata:{\n                link:'https://www.cdc.gov/coronavirus/2019-ncov/symptoms-testing/symptoms.html',\n                label: 'Link to COVID-19 Symptoms'\n            },\n           \n            trigger:'covidsymptoms'\n          },\n\n          {\n            id: 'covidsymptoms',\n            message:'Here are a few common symptoms: cough, fever or chills, fatigue',\n            end:true\n          },\n          \n\n        \n         {\n          id: 'covidcureslink',\n          asMessage:true,\n          component: <HealthLink />,\n          metadata:{\n              link:'https://www.cdc.gov/coronavirus/2019-ncov/your-health/treatments-for-severe-illness.html',\n              label: 'Link to COVID-19 Treatment'\n          },\n         \n          trigger:'covidcures'\n        },\n\n        {\n          id: 'covidcures',\n          message:'Here are a few common treament methods: antiviral treatment',\n          end:true\n        },\n          \n          {\n            id: 'strep',\n            message: 'Choose a topic:',\n            trigger:'strepdetails',\n        },\n        {\n          id: 'strepdetails',\n          options:[\n              {value:'strepsymptoms',label: \"Symptoms\",trigger:\"strepsymptomslink\"},\n              {value:'streptreatment',label: \"Treatment\", trigger:\"strepcureslink\"},\n              ],\n        },\n        {\n          id: 'strepsymptomslink',\n          asMessage:true,\n          component: <HealthLink />,\n          metadata:{\n              link:'https://www.cdc.gov/groupastrep/diseases-public/strep-throat.html',\n              label: 'Link to Strep Throat Symptoms'\n          },\n         \n          trigger:'strepsymptoms'\n        },\n\n        {\n          id: 'strepsymptoms',\n          message:'Here are a few common symptoms: fever, pain when swallowing, sore throat that can start very quickly',\n          end:true\n        },\n        \n\n      \n       {\n        id: 'strepcureslink',\n        asMessage:true,\n        component: <HealthLink />,\n        metadata:{\n            link:'https://www.webmd.com/oral-health/understanding-strep-throat-treatment',\n            label: 'Link to Strep Throat Treatment'\n        },\n       \n        trigger:'strepcures'\n      },\n\n      {\n        id: 'strepcures',\n        message:'Here are a few common treament methods: antibiotics, rest, over-the-counter medicines',\n        end:true\n      },\n        \n\n          //for a patient request\n        {\n            id: 'request-name',\n            message: 'Please enter your legal name:',\n            trigger: 'patientname'\n          },{\n    \n            id: 'patientname',\n            user: true,\n            validator: (value)=> {\n                if(/^[A-Za-z][A-Za-z'-]+([ A-Za-z][A-Za-z'-]+)*/.test(value)){\n                    return true;\n                }\n                else{\n                    return 'Please enter valid name.';\n                }\n            },\n            trigger: 'welcome-name',\n          },\n          {\n            id: 'welcome-name',\n            message: \"Welcome {previousValue}. Let's create your request\",\n            trigger: 'request-email',\n          },{\n                id:'request-email',\n                message: \"Please enter your email:\",\n                trigger:\"patientemail\",\n          },\n          {\n            id: 'patientemail',\n            user:true,\n            validator: (value) => {\n                if(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value)){\n                    return true;\n                }\n                else{\n                    return 'Please enter a valid email';\n                }\n            },\n            trigger:'request-phone',\n          },\n          {\n              id:'request-phone',\n              message:'Please enter your phone number:(###-###-#####)',\n              trigger:'patientphone',\n          },\n          {\n              id:'patientphone',\n              user:true,\n              validator: (value) => {\n                  if(/^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]\\d{3}[\\s.-]\\d{4}$/.test(value)){\n                      return true;\n                  }\n                  else{\n                      return 'Please enter valid phone number (###-###-#####)'\n                  }\n              },\n              trigger:'request-symptoms',\n\n          },\n          {\n            id:'request-symptoms',\n            message:'What are your symptoms?',\n            trigger:'symptoms',\n          },\n          {\n              id:'symptoms',\n            options:[\n                {value:'cough',label:'Cough',trigger:'send-request'},\n                {value:'fever',label:'Fever',trigger:'send-request'},\n                {value:'headache',label:'Headache',trigger:'send-request'},\n\n            ]\n          },\n        \n          {\n              id:'send-request',\n              component: <PostRequest />,\n              asMessage:true,\n              end: true\n          }\n\n    \n    ];\nclass PatientForm extends Component{\n    render(){\n        return(\n            <ThemeProvider theme={style}>\n             <ChatBot steps={ChatSteps} />\n            </ThemeProvider>\n        )  \n    }\n}\n\nexport default PatientForm;","import React from 'react';\nimport PatientForm from \"./PatientForm\";\n\nconst Home = () => {\n    return (\n<div className=\"home\">\n            <h1>Welcome to HealthBot</h1>\n\n           <PatientForm />\n        </div>\n    )\n}\n\nexport default Home;\n ","\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { flushSync } from 'react-dom';\n\n\n  class UpdateRecord extends Component {\n    \n   \n        constructor(props){ \n            super(props);\n            this.state = {\n                record: [],\n                id: window.location.pathname.split('/')[2],\n                updatestautus: \"\",\n                isSubmitted : false,\n\n            };\n            this.updateRecord = this.updateRecord.bind(this);\n        \n           \n        }\n        \n    \n\n        componentDidMount(){\n           \n            //get the record\n            this.retrieveRecord();\n            \n        }\n    \n    retrieveRecord = () => {\n        //const id = window.location.href.split('/')[1]\n        axios.get(\"/api/chats/\"+this.state.id)\n       .then((res) => this.setState({record: res.data }));\n        \n    };\n\n    updateRecord = (event) => {\n        event.preventDefault();\n        \n        this.state.record.diagnosis =  event.target[5].value;\n       axios.put(\"/api/chats/\"+this.state.id+'/',this.state.record)\n        .then((res) => flushSync(() =>{\n            this.setState({updatestautus: res.status, isSubmitted:true },this.isSuccessful());\n        }));\n        \n\n\n    };\n\n    isSuccessful = () => {\n      \n        setTimeout(() => {\n            console.log(this.state.updatestautus);\n          }, 0);\n       \n        \n        if(this.state.updatestautus!=='200'){\n            flushSync (()=>{\n                this.setState({isSubmitted: false})\n        });\n    };\n    };\n   \n\n    displayRecord = () => {\n        const item = this.state.record;\n\n        return  (\n          \n        <form onSubmit={this.updateRecord}>\n            \n        <h5>Record {item.id}</h5> \n     \n         Patient ID: <input type=\"textarea\" id=\"patientid\" name=\"patientid\" value={item.patient_id}  readOnly></input><br></br>\n         Patient Name: <input type=\"text\" id=\"patientname\" name=\"patientname\" value={item.patient_name} readOnly></input><br></br>\n         Email: <input type=\"text\" id=\"email\" name=\"email\" value={item.email} readOnly></input><br></br>\n         Phone #: <input type=\"text\" id=\"phone\" name=\"phone\" value={item.phone_num} readOnly></input><br></br>\n         Symptoms: <input type=\"text\" id=\"symptoms\" name=\"symptoms\" value={item.symptoms} readOnly></input><br></br><br></br>\n         Diagnosis: <input type=\"text\" id=\"diagnosis\" name=\"diagnosis\" defaultValue={item.diagnosis} ></input>**<br></br><br></br>\n        <button type=\"submit\">Submit</button>\n        </form>\n\n       \n         );\n    };\n\n  \n\n\n    render(){\n        \n        return(\n        <div className=\"update\">\n            <h1>Update Record</h1>\n            {this.displayRecord()}<br></br>\n            {this.state.isSubmitted === true &&\n        <div className=\"success-bubble\">\n          Successful Submission!!\n        </div>\n      }\n           \n        </div>\n    );\n    }\n};\n\nexport default UpdateRecord;","import React from 'react';\nimport {BrowserRouter as Router, Routes, Route} from \"react-router-dom\";\nimport RecordView from \"./components/doctor/RecordView\";\nimport Button from \"./components/doctor/Button\";\nimport Home from \"./components/patient/Home\";\nimport UpdateRecord  from './components/doctor/UpdateRecord';\n \nconst App = () =>{\n\n    return (    \n           \n        <div className=\"Chatbot\">\n\n        <div className=\"nav-bar\">\n        <nav>\n              <ul>\n                <li><Button to =\"\" /></li>\n                <li><Button to =\"records\" /></li>\n              </ul>\n               \n            </nav>\n        </div>\n            \n            <div className=\"main\">\n            <Routes>\n              <Route path =\"/\" element={<Home />} />\n              <Route path = \"/records\" element={<RecordView />} />\n              <Route path = \"/update/:id\" element={<UpdateRecord />} />\n              <Route path=\"*\" element={<p>Path not resolved</p>} />\n              </Routes>\n            </div>\n           \n           \n          \n              \n\n        </div>\n   \n    )\n\n}\n\n \n\n\nexport default App;\n\n\n\n\n\n\n\n","/*import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n <React.StrictMode>\n    <App />,\n  </React.StrictMode>,\n  \n);\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n*/\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\n// 👇️ wrap App in Router\n\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}